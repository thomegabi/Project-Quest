{"version":3,"file":"quest-controller.js","sourceRoot":"","sources":["../../src/controllers/quest-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport { QuestService } from '../services/quest-service';\r\nimport { Factions, Races } from '@prisma/client';\r\n\r\nexport class QuestController {\r\n  private questService: QuestService;\r\n\r\n  constructor() {\r\n    this.questService = new QuestService();\r\n  }\r\n\r\n  async createQuest(req: Request, res: Response) {\r\n    try {\r\n      const { giver, factionOrRace, primaryObjective, secondaryObjective, description, userId } = req.body;\r\n\r\n      const createdQuest = await this.questService.createQuest({\r\n        userId,\r\n        sender: giver,\r\n        faction: factionOrRace?.faction || null,\r\n        race: factionOrRace?.race || null,\r\n        p_objective: primaryObjective,\r\n        s_objective: secondaryObjective,\r\n        description\r\n      });\r\n\r\n      return res.status(201).json(createdQuest);\r\n    } catch (error) {\r\n      console.error('Error creating quest:', error);\r\n      return res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  }\r\n\r\n  async updateQuest(req: Request, res: Response) {\r\n    try {\r\n      const { id } = req.params;\r\n      const { giver, factionOrRace, primaryObjective, secondaryObjective, description } = req.body;\r\n\r\n      const updatedQuest = await this.questService.updateQuest(id, {\r\n        sender: giver,\r\n        faction: factionOrRace?.faction || null,\r\n        race: factionOrRace?.race || null,\r\n        p_objective: primaryObjective,\r\n        s_objective: secondaryObjective,\r\n        description\r\n      });\r\n\r\n      return res.json(updatedQuest);\r\n    } catch (error) {\r\n      console.error('Error updating quest:', error);\r\n      return res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  }\r\n\r\n  async getQuestById(req: Request, res: Response) {\r\n    try {\r\n      const { id } = req.params;\r\n      const quest = await this.questService.getQuestById(id);\r\n\r\n      if (!quest) {\r\n        return res.status(404).json({ error: 'Quest not found' });\r\n      }\r\n\r\n      return res.json(quest);\r\n    } catch (error) {\r\n      console.error('Error getting quest:', error);\r\n      return res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  }\r\n\r\n  async getAllQuests(req: Request, res: Response) {\r\n    try {\r\n      const quests = await this.questService.getAllQuests();\r\n      return res.json(quests);\r\n    } catch (error) {\r\n      console.error('Error getting all quests:', error);\r\n      return res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  }\r\n\r\n  async deleteQuest(req: Request, res: Response) {\r\n    try {\r\n      const { id } = req.params;\r\n      await this.questService.deleteQuest(id);\r\n      return res.status(204).send();\r\n    } catch (error) {\r\n      console.error('Error deleting quest:', error);\r\n      return res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  }\r\n}"]}