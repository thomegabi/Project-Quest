{"version":3,"file":"token-auth-middleware.js","sourceRoot":"","sources":["../../src/middlewares/token-auth-middleware.ts"],"names":[],"mappings":";;;;;;AAAA,gEAA+B;AAE/B,yBAAsB;AAGf,MAAM,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAEhD,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QACrD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,CAAC;QAC1E,OAAM;IACR,CAAC;IAED,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvC,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAoB,CAAC,CAAC;QACpE,GAAG,CAAC,MAAM,GAAI,OAAe,CAAC,MAAM,CAAC;QACrC,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;IACtD,CAAC;AACH,CAAC,CAAC;AAjBW,QAAA,WAAW,eAiBtB","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport 'dotenv/config'\r\n\r\n\r\nexport const verifyToken = (req: Request, res: Response, next: NextFunction) => {\r\n  const authHeader = req.headers['authorization'];\r\n\r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    res.status(403).json({ message: 'Token não fornecido ou mal formatado' });\r\n    return\r\n  }\r\n\r\n  const token = authHeader.split(' ')[1];\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET as string);\r\n    req.userId = (decoded as any).userId;\r\n    next();\r\n  } catch (err) {\r\n    res.status(401).json({ message: 'Token inválido' });\r\n  }\r\n};\r\n"]}