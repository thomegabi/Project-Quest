{"version":3,"file":"quest-service.js","sourceRoot":"","sources":["../../src/services/quest-service.ts"],"names":[],"mappings":";;;AAAA,uEAAmE;AAGnE,MAAa,YAAY;IAGvB;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,kCAAe,EAAE,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,IAAmD;QACnE,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU,EAAE,IAAoB;QAChD,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;CACF;AA1BD,oCA0BC","sourcesContent":["import { QuestRepository } from '../repositories/quest-repository';\r\nimport { Quest, Factions, Races } from '@prisma/client';\r\n\r\nexport class QuestService {\r\n  private questRepository: QuestRepository;\r\n\r\n  constructor() {\r\n    this.questRepository = new QuestRepository();\r\n  }\r\n\r\n  async createQuest(data: Omit<Quest, 'id' | 'createdAt' | 'updatedAt'>) {\r\n    return this.questRepository.createQuest(data);\r\n  }\r\n\r\n  async getQuestById(id: string) {\r\n    return this.questRepository.getQuestById(id);\r\n  }\r\n\r\n  async updateQuest(id: string, data: Partial<Quest>) {\r\n    return this.questRepository.updateQuest(id, data);\r\n  }\r\n\r\n  async deleteQuest(id: string) {\r\n    return this.questRepository.deleteQuest(id);\r\n  }\r\n\r\n  async getAllQuests() {\r\n    return this.questRepository.getAllQuests();\r\n  }\r\n}"]}