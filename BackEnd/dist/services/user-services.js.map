{"version":3,"file":"user-services.js","sourceRoot":"","sources":["../../src/services/user-services.ts"],"names":[],"mappings":";;;AAAA,4EAAwE;AAGxE,MAAM,cAAc,GAAG,IAAI,gCAAc,EAAE,CAAC;AAE5C,MAAa,WAAW;IACtB,KAAK,CAAC,UAAU,CAAC,KAAa,EAAE,QAAgB,EAAE,IAAY;QAC5D,OAAO,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU;QAC1B,OAAO,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,KAAa;QAChC,OAAO,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU,EAAE,IAAmB;QAC9C,OAAO,cAAc,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,OAAO,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,WAAW;QACf,OAAO,cAAc,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;CACF;AAxBD,kCAwBC","sourcesContent":["import { UserRepository } from '../repositories/prisma/user-repository';\r\nimport { User } from '@prisma/client';\r\n\r\nconst userRepository = new UserRepository();\r\n\r\nexport class UserService {\r\n  async createUser(email: string, password: string, name: string): Promise<User> {\r\n    return userRepository.createUser(email, password, name);\r\n  }\r\n\r\n  async getUserById(id: string): Promise<User | null> {\r\n    return userRepository.getUserById(id);\r\n  }\r\n\r\n  async getUserByEmail(email: string): Promise<User | null> {\r\n    return userRepository.getUserByEmail(email);\r\n  }\r\n\r\n  async updateUser(id: string, data: Partial<User>): Promise<User> {\r\n    return userRepository.updateUser(id, data);\r\n  }\r\n\r\n  async deleteUser(id: string): Promise<User> {\r\n    return userRepository.deleteUser(id);\r\n  }\r\n\r\n  async getAllUsers(): Promise<User[]> {\r\n    return userRepository.getAllUsers();\r\n  }\r\n}\r\n"]}