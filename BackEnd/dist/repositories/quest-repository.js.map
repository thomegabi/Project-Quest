{"version":3,"file":"quest-repository.js","sourceRoot":"","sources":["../../src/repositories/quest-repository.ts"],"names":[],"mappings":";;;AAAA,2CAAqD;AAErD,MAAM,MAAM,GAAG,IAAI,qBAAY,CAAC;IAC9B,GAAG,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;CACxC,CAAC,CAAC;AAEH,MAAa,eAAe;IAC1B,KAAK,CAAC,WAAW,CAAC,IAAmD;QACnE,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YACzB,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,EAAU;QAC3B,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;YAC7B,KAAK,EAAE,EAAE,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU,EAAE,IAAoB;QAChD,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YACzB,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,IAAI,EAAE;gBACJ,GAAG,IAAI;gBACP,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB;SACF,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU;QAC1B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YACzB,KAAK,EAAE,EAAE,EAAE,EAAE;SACd,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;CACF;AAhCD,0CAgCC","sourcesContent":["import { PrismaClient, Quest } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient({\r\n  log: ['query', 'info', 'warn', 'error'],\r\n});\r\n\r\nexport class QuestRepository {\r\n  async createQuest(data: Omit<Quest, 'id' | 'createdAt' | 'updatedAt'>): Promise<Quest> {\r\n    return prisma.quest.create({\r\n      data,\r\n    });\r\n  }\r\n\r\n  async getQuestById(id: string): Promise<Quest | null> {\r\n    return prisma.quest.findUnique({\r\n      where: { id },\r\n    });\r\n  }\r\n\r\n  async updateQuest(id: string, data: Partial<Quest>): Promise<Quest> {\r\n    return prisma.quest.update({\r\n      where: { id },\r\n      data: {\r\n        ...data,\r\n        updatedAt: new Date()\r\n      }\r\n    });\r\n  }\r\n\r\n  async deleteQuest(id: string): Promise<Quest> {\r\n    return prisma.quest.delete({\r\n      where: { id },\r\n    });\r\n  }\r\n\r\n  async getAllQuests(): Promise<Quest[]> {\r\n    return prisma.quest.findMany();\r\n  }\r\n}"]}